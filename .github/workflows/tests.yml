name: tests

on: [push, pull_request]

jobs:
  canceller:
    runs-on: macos-10.15
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

  CLI:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15]
        python: [ 3.8 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Choose GCC
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          # Install specific GCC version as the default.
          sudo apt-get install gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}
          sudo update-alternatives \
            --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.gcc }} 100 \
            --slave /usr/bin/g++ g++ /usr/bin/g++-${{ matrix.gcc }}

      - name: Cache conda and dependancies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            c:\Miniconda\envs\anaconda-client-env
            /usr/share/miniconda/envs/anaconda-client-env
            ~/osx-conda
            ~/.profile
          key: ${{ runner.os }}-${{ matrix.python }}-conda-v13-${{ hashFiles('treerec/tests/conda-requirements.txt') }}-${{ hashFiles('treerec/tests/pip-requirements.txt') }}

      - name: Install Conda
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          activate-environment: anaconda-client-env
          python-version: ${{ matrix.python }}
          channels: conda-forge
          channel-priority: strict
          auto-update-conda: true
          use-only-tar-bz2: true

      - name: Install conda deps
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash -l {0} #We need a login shell to get conda
        run: conda install --yes --file=conda-requirements.txt

      - name: Install pip deps
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          pip3 install -r treerec/tests/pip-requirements.txt

      - name: Fix OSX Cache Write #OSX Won't let the cache restore due to file perms
        if: steps.cache.outputs.cache-hit != 'true' && startsWith(matrix.os, 'macos')
        run: |
          cp -r /usr/local/miniconda/envs/anaconda-client-env ~/osx-conda

      - name: Fix OSX Cache Restore
        if: steps.cache.outputs.cache-hit == 'true' && startsWith(matrix.os, 'macos')
        run: |
          mkdir -p /usr/local/miniconda/envs
          sudo cp -r ~/osx-conda /usr/local/miniconda/envs/anaconda-client-env

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: Treesequence tests
        run: |
          source ~/.profile
          conda activate anaconda-client-env
          export PATH=$PATH:$PWD/Release
          echo $PATH
          cd treerec/tests && python -m pytest -xv
